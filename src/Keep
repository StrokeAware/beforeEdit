import React, { useState, useEffect } from 'react';
import { db } from '../auth.js';
import { collection, addDoc } from 'firebase/firestore';
import { Link } from 'react-router-dom';
import Swal from 'sweetalert2';
import './LoginRegister.css';

const PatientTopForm = () => {
  const [formData, setFormData] = useState({
    name: '',
    surname: '',
    birthDate: '',
    age: '',
    idCard: '',
    gender: '',
    disease: '',
    phone: '',
  });

  const [isSaved, setIsSaved] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [firebaseInitialized, setFirebaseInitialized] = useState(false);

  // Verify Firebase connection on component mount
  useEffect(() => {
    try {
      if (db) {
        console.log('Firebase Firestore is properly initialized');
        setFirebaseInitialized(true);
      } else {
        console.error('Firestore instance is not available');
      }
    } catch (error) {
      console.error('Firebase initialization error:', error);
    }
  }, []);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  // Calculate age based on Thai year (+543)
  useEffect(() => {
    if (formData.birthDate) {
      try {
        const birthYear = new Date(formData.birthDate).getFullYear() + 543;
        const currentYear = new Date().getFullYear() + 543;
        const calculatedAge = currentYear - birthYear;
        setFormData(prev => ({ ...prev, age: calculatedAge.toString() }));
      } catch (error) {
        console.error('Date calculation error:', error);
      }
    }
  }, [formData.birthDate]);

  const validateForm = () => {
    const errors = [];
    
    if (!formData.name.trim() || !/^[‡∏Å-‡πô\s]+$/.test(formData.name.trim())) {
      errors.push('‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
    }
    
    if (!formData.surname.trim() || !/^[‡∏Å-‡πô\s]+$/.test(formData.surname.trim())) {
      errors.push('‡∏™‡∏Å‡∏∏‡∏•‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
    }
    
    if (!formData.idCard.trim() || !/^\d{13}$/.test(formData.idCard.trim())) {
      errors.push('‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ 13 ‡∏´‡∏•‡∏±‡∏Å');
    }
    
    if (!formData.gender) {
      errors.push('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®');
    }
    
    if (!formData.phone.trim() || !/^\d{10}$/.test(formData.phone.trim())) {
      errors.push('‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ 10 ‡∏´‡∏•‡∏±‡∏Å');
    }
    
    if (!formData.birthDate) {
      errors.push('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î');
    }
    
    return errors;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!firebaseInitialized) {
      Swal.fire('‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥', '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ', 'error');
      return;
    }

    setIsSubmitting(true);
    const validationErrors = validateForm();
    
    if (validationErrors.length > 0) {
      Swal.fire({
        title: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        html: validationErrors.map(err => `‚Ä¢ ${err}`).join('<br>'),
        icon: 'error'
      });
      setIsSubmitting(false);
      return;
    }

    try {
      // Add document to Firestore
      const timeoutPromise = new Promise((_, reject) =>
        setTimeout(() => reject(new Error("‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ô‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ")), 20000)
      );
      
      const saveOperation = addDoc(collection(db, 'patients_topform'), {
        ...formData,
        fullName: `${formData.name} ${formData.surname}`,
        createdAt: new Date(),
        updatedAt: new Date(),
      });
      
      const docRef = await Promise.race([saveOperation, timeoutPromise]);
      
      
      console.log('Document successfully written with ID:', docRef.id);
      
      // Store patient name in localStorage
      localStorage.setItem('patientName', `${formData.name} ${formData.surname}`);
      localStorage.setItem('patientId', docRef.id);
      
      await Swal.fire({
        title: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
        icon: 'success',
        confirmButtonText: '‡∏ï‡∏Å‡∏•‡∏á'
      });
      
      setIsSaved(true);
    } catch (error) {
      console.error('Firestore error:', error);
      await Swal.fire({
        title: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
        text: `‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ: ${error.message}`,
        icon: 'error',
        confirmButtonText: '‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡πâ‡∏ß'
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="patient-form-container">
      <h2 className="form-title">ü©∫ ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</h2>

      <form onSubmit={handleSubmit} className="patient-form">
        <div className="form-group">
          <label>‡∏ä‡∏∑‡πà‡∏≠ (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)</label>
          <input
            name="name"
            value={formData.name}
            onChange={handleChange}
            required
            pattern="[‡∏Å-‡πô\s]+"
            title="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
          />
        </div>

        <div className="form-group">
          <label>‡∏™‡∏Å‡∏∏‡∏• (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)</label>
          <input
            name="surname"
            value={formData.surname}
            onChange={handleChange}
            required
            pattern="[‡∏Å-‡πô\s]+"
            title="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
          />
        </div>

        <div className="form-group">
          <label>‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</label>
          <input
            type="date"
            name="birthDate"
            value={formData.birthDate}
            onChange={handleChange}
            required
          />
        </div>

        <div className="form-group">
          <label>‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô (13 ‡∏´‡∏•‡∏±‡∏Å)</label>
          <input
            name="idCard"
            value={formData.idCard}
            onChange={handleChange}
            required
            pattern="\d{13}"
            title="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô 13 ‡∏´‡∏•‡∏±‡∏Å"
          />
        </div>

        <div className="form-group">
          <label>‡πÄ‡∏û‡∏®</label>
          <select
            name="gender"
            value={formData.gender}
            onChange={handleChange}
            required
          >
            <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®</option>
            <option value="‡∏ä‡∏≤‡∏¢">‡∏ä‡∏≤‡∏¢</option>
            <option value="‡∏´‡∏ç‡∏¥‡∏á">‡∏´‡∏ç‡∏¥‡∏á</option>
          </select>
        </div>

        <div className="form-group">
          <label>‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</label>
          <input
            name="disease"
            value={formData.disease}
            onChange={handleChange}
          />
        </div>

        <div className="form-group">
          <label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå (10 ‡∏´‡∏•‡∏±‡∏Å)</label>
          <input
            name="phone"
            value={formData.phone}
            onChange={handleChange}
            required
            pattern="\d{10}"
            title="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå 10 ‡∏´‡∏•‡∏±‡∏Å"
          />
        </div>

        <button
          type="submit"
          className="submit-btn"
          disabled={isSubmitting}
        >
          {isSubmitting ? (
            <span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...</span>
          ) : (
            <span>‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</span>
          )}
        </button>
      </form>

      {isSaved && (
        <div className="next-page-container">
          <Link to="/BEFAST_MAIN_BALANCE" className="next-page-btn">
            ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
          </Link>
        </div>
      )}
    </div>
  );
};

export default PatientTopForm;